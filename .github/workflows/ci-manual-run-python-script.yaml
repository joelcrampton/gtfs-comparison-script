name: ci-manual-run-python-script
run-name: ci-manual-run-python-script for ${{ github.event.inputs.data }}

on:
  workflow_dispatch:
    inputs:
      data:
        description: Data
        required: true
      info:
        type: boolean
        description: Include tables of new/removed trips

permissions:
  contents: write

jobs:
  prevent-main:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
      - name: Prevent main
        run: |
          echo "This workflow is not allowed to run on the main branch."
          exit 1
          
  run-python-script:
    needs: prevent-main
    runs-on: ubuntu-latest

    env:
      DATA: "${{ github.event.inputs.data }}"
      INFO: ${{ github.event.inputs.info }}

    steps:
    - name: Check data input
      run: |
        # Regex to check if the data input is valid
        # Must only include; alphanumeric characters, underscores and hyphens
        if [[ ! "${{ env.DATA }}" =~ ^[a-zA-Z0-9_-]+$ ]]; then
          echo "Error: Invalid data input: '${{ env.DATA }}'. Only alphanumeric characters, underscores and hyphens are allowed."
          exit 1
        fi

    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Run Python script
      run: |
        cd code
        if [ "${{ env.INFO }}" = "true" ]; then
          python app.py ${{ env.DATA }} --info
        else
          python app.py ${{ env.DATA }}
        fi
    
    - name: Commit report
      run: |
        git config user.name "github-actions"
        git config user.email "github-actions@github.com"
        git add output/${{ env.DATA }}.md
        # Check for staged changes
        if ! git diff --cached --quiet; then
          # Check if report already exists
          if git cat-file -e HEAD:output/${{ env.DATA }}.md 2>/dev/null; then
            git commit -m "Updated ${{ env.DATA }}.md"
          else
            git commit -m "Created ${{ env.DATA }}.md"
          fi
          git push
        fi
