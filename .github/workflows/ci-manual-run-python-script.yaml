name: ci-manual-run-python-script
run-name: ci-manual-run-python-script for ${{ github.event.inputs.data }}

on:
  workflow_dispatch:
    inputs:
      data:
        description: Data
        required: true
      info:
        type: boolean
        description: Include tables of new/removed trips

permissions:
  contents: write

jobs:   
  run-python-script:
    runs-on: ubuntu-latest

    env:
      DATA: "${{ github.event.inputs.data }}"
      INFO: ${{ github.event.inputs.info }}

    steps:
    - name: Check data input
      run: |
        # Regex to check if the data input is valid
        # Must only include; alphanumeric characters, underscores and hyphens
        if [[ ! "${{ env.DATA }}" =~ ^[a-zA-Z0-9_-]+$ ]]; then
          echo "Error: Invalid data input '${{ env.DATA }}'. Only alphanumeric characters, underscores and hyphens are allowed"
          exit 1
        fi

    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Switch to feature branch
      if: github.ref_name == 'main'
      env:
        BRANCH: feature/${{ env.DATA }}
      run: |
        echo "BRANCH=value" >> $GITHUB_ENV
        git fetch origin
        if git ls-remote --exit-code --heads origin "$BRANCH"; then
          git checkout "$BRANCH"
          git pull origin "$BRANCH"
        else
          git checkout -b "$BRANCH"
        fi
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then 
          pip install -r requirements.txt
        fi
    
    - name: Run Python script
      run: |
        cd code
        if [ "${{ env.INFO }}" = "true" ]; then
          python app.py ${{ env.DATA }} --info
        else
          python app.py ${{ env.DATA }}
        fi
    
    - name: Commit report
      env:
        FILENAME: ${{ env.DATA }}.md
      run: |
        git config user.name "github-actions"
        git config user.email "github-actions@github.com"
        git add output/"$FILENAME"
        # Check for staged changes
        if ! git diff --cached --quiet; then
          # Check if report already exists
          if git cat-file -e HEAD:output/"$FILENAME" 2>/dev/null; then
            git commit -m "Updated $FILENAME"
          else
            git commit -m "Created $FILENAME"
          fi
          git push
        fi
        
    - name: Create pull request
      if: github.ref_name == 'main'
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Check if a pull request already exists
        if gh pr list --head "$BRANCH" --base main --state open --json number --jq '.[0].number' | grep -q '[0-9]'; then
          echo "Pull request from $BRANCH to main already exists"
        else
          echo "Creating pull request from $BRANCH_NAME to main..."
          gh pr create --head "$BRANCH" --base main --title "Update from $BRANCH_" \
            --body "This pull request was automatically generated by [ci-manual-run-python-script](https://github.com/joelcrampton/gtfs-comparison-script/actions/workflows/ci-manual-run-python-script.yaml)"
        fi
